<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">
    <!--  Spring-Security 的配置 -->
    <security:http auto-config="true" use-expressions="true">
        <security:csrf disabled="true"/>
        <security:intercept-url pattern="/account/login" access="permitAll"/>
        <security:intercept-url pattern="/product/edit" access="hasRole('ROLE_ADMIN')"/>
        <!--<security:intercept-url pattern="/common/greeting" access="hasRole('ROLE_USER')"/>-->

        <security:form-login
                login-page="/account/login"
                authentication-failure-url="/account/login?error=true"
                default-target-url="/"/>

        <security:logout
                invalidate-session="true"
                logout-success-url="/account/login"
                logout-url="/account/logout"/>

    </security:http>

    <!-- 指定一个自定义的authentication-manager :customUserDetailsService -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="customUserDetailsService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- 对密码进行MD5编码 -->
    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>

    <!--
        通过 customUserDetailsService,Spring会自动的用户的访问级别.
        也可以理解成:以后我们和数据库操作就是通过customUserDetailsService来进行关联.
     -->
    <bean id="customUserDetailsService" class="com.zhaoyan.webserver.web.security.CustomUserDetailsService"/>
</beans>